/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sudoku;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JLabel;
import javax.swing.SwingConstants;

/**
 *
 * @author soft
 */
public class SolvingOptionsFrame extends javax.swing.JFrame {

    /**
     * Creates new form SolvingOptionsFrame
     */
    
    int solved[];
    int saved[];
    int unsolved[];
    
    JLabel pl[];
    JLabel ql[];
    JLabel sl[];
    
    File f;
    public SolvingOptionsFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        if(BasicSudoku.easy)
            f=new File(Paths.get("").toAbsolutePath()+"/puzzle/easy.txt");
        else if(BasicSudoku.medium)
            f=new File(Paths.get("").toAbsolutePath()+"/puzzle/medium.txt");
        else
            f=new File(Paths.get("").toAbsolutePath()+"/puzzle/hard.txt");
            
        if(f.length()==0)
        {
            messageP.setVisible(true);
            optionsP.setVisible(false);
        }
        else
            readFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        optionsP = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        backL = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        unsolvedP = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        savedP = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        solvedP = new javax.swing.JPanel();
        messageP = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 102));
        jPanel1.setLayout(new java.awt.CardLayout());

        optionsP.setBackground(new java.awt.Color(102, 0, 102));
        optionsP.setOpaque(false);

        jLabel1.setBackground(new java.awt.Color(204, 0, 204));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        backL.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        backL.setForeground(new java.awt.Color(255, 255, 255));
        backL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backL.setText("back");
        backL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLMouseClicked(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Choose a Puzzle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 0, 22), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setOpaque(false);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Unsolved", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 0, 22), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel9.setOpaque(false);

        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setOpaque(false);

        unsolvedP.setBackground(new java.awt.Color(102, 0, 102));
        unsolvedP.setLayout(new java.awt.GridLayout(1, 0));
        jScrollPane5.setViewportView(unsolvedP);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Saved (Cont.)", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 0, 22), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel16.setOpaque(false);

        jScrollPane7.setBackground(new java.awt.Color(102, 0, 102));
        jScrollPane7.setBorder(null);
        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        savedP.setBackground(new java.awt.Color(102, 0, 102));
        savedP.setLayout(new java.awt.GridLayout(1, 0));
        jScrollPane7.setViewportView(savedP);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Solved", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 0, 22), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel18.setOpaque(false);

        jScrollPane8.setBorder(null);
        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane8.setOpaque(false);

        solvedP.setBackground(new java.awt.Color(102, 0, 102));
        solvedP.setLayout(new java.awt.GridLayout(1, 0));
        jScrollPane8.setViewportView(solvedP);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout optionsPLayout = new javax.swing.GroupLayout(optionsP);
        optionsP.setLayout(optionsPLayout);
        optionsPLayout.setHorizontalGroup(
            optionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPLayout.createSequentialGroup()
                .addGap(0, 18, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backL, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );
        optionsPLayout.setVerticalGroup(
            optionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(optionsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(backL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(optionsP, "card2");

        messageP.setBackground(new java.awt.Color(102, 0, 102));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 72)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("NO PUZZLES ");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 72)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("FOUND IN THIS ");

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 72)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("CATEGORY");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("back");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout messagePLayout = new javax.swing.GroupLayout(messageP);
        messageP.setLayout(messagePLayout);
        messagePLayout.setHorizontalGroup(
            messagePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(messagePLayout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        messagePLayout.setVerticalGroup(
            messagePLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(messageP, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
      SelectionFrame sf=new SelectionFrame();
      this.setVisible(false);
      sf.setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void backLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLMouseClicked
      SelectionFrame sf=new SelectionFrame();
      sf.setVisible(true);
      this.setVisible(false);
    }//GEN-LAST:event_backLMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SolvingOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SolvingOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SolvingOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SolvingOptionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SolvingOptionsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPanel messageP;
    private javax.swing.JPanel optionsP;
    private javax.swing.JPanel savedP;
    private javax.swing.JPanel solvedP;
    private javax.swing.JPanel unsolvedP;
    // End of variables declaration//GEN-END:variables

    private void readFile() 
    {
        
        ArrayList<Integer> solved=new ArrayList<>();
        ArrayList<Integer> saved=new ArrayList<>();
        ArrayList<Integer> unsolved=new ArrayList<>();
        
        int end=0,i=01;
        try
        {
            FileReader fr=new FileReader(f);
            char rc[]=new char[83];
            do
            {
                if(i!=1)
                {
                    end=fr.read();
                    end=fr.read();
                }
                if(end!=-1)
                {
                    end=fr.read(rc);
                    if(rc[82]=='U')
                        unsolved.add(i);
                    if(rc[82]=='C')
                    {
                        saved.add(i);
                        end=fr.read(rc);
                    }
                    if(rc[82]=='S')
                    {
                        solved.add(i);
                        end=fr.read(rc);
                    }
                   
                    i++;
                }    
                
            }while(end!=-1);
            fr.close();
            this.solved=new int[solved.size()];
            this.saved=new int[saved.size()];
            this.unsolved=new int[unsolved.size()];
            int j=0;
            Iterator it=solved.iterator();
            while(it.hasNext())
            {
                this.solved[j]=(Integer)it.next();
                j++;
            }
            j=0;
            it=saved.iterator();
            while(it.hasNext())
            {
                this.saved[j]=(Integer)it.next();
                j++;
            }
            j=0;
            it=unsolved.iterator();
            while(it.hasNext())
            {
                this.unsolved[j]=(Integer)it.next();
                j++;
            }
            
            setPanels();
        }
        catch(IOException ioe)
        {
            System.out.println("Exception in solvinfOptionsFrame.setPanels: "+ioe.getMessage());
        }
        
    }   

    private void setPanels() 
    {
       
        GridLayout gl;
        
        //unsolvedP
        if(unsolved.length<9)
            gl=new GridLayout(9,1);
        else
            gl=new GridLayout(unsolved.length,1);
        unsolvedP.setLayout(gl);
        pl=new JLabel[this.unsolved.length];
        for(int i=0;i<this.unsolved.length;i++)
        {
            
            pl[i]=new JLabel("Puzzle "+unsolved[i]);
            pl[i].setPreferredSize(new Dimension(unsolvedP.getWidth(),60));
            pl[i].setOpaque(true);
            if(i%2==0)
                pl[i].setBackground(new Color(204,0,204));
            else
                pl[i].setBackground(new Color(204,0,153));
            
            pl[i].setForeground(Color.white);
            pl[i].setHorizontalAlignment(SwingConstants.CENTER);
            pl[i].setFont(new Font("comic sans ms",Font.PLAIN,22));
            unsolvedP.add(pl[i]);
            final int il=unsolved[i];
            pl[i].addMouseListener(new MouseAdapter()
            {
                
                public void mouseClicked(MouseEvent evt)
                {
                    unsolvedClicked(il);
                }
            });
        }
        unsolvedP.revalidate();
        unsolvedP.repaint();
        
        //savedP
        if(saved.length<9)
            gl=new GridLayout(9,1);
        else
            gl=new GridLayout(saved.length,1);
        savedP.setLayout(gl);
        sl=new JLabel[saved.length];
        for(int i=0;i<saved.length;i++)
        {
            sl[i]=new JLabel("Puzzle "+saved[i]);
            sl[i].setPreferredSize(new Dimension(unsolvedP.getWidth(),60));
            sl[i].setOpaque(true);
            if(i%2==0)
                sl[i].setBackground(new Color(204,0,204));
            else
                sl[i].setBackground(new Color(204,0,153));
            
            sl[i].setHorizontalAlignment(SwingConstants.CENTER);
            sl[i].setForeground(Color.white);
            sl[i].setFont(new Font("comic sans ms",Font.PLAIN,22));
            savedP.add(sl[i]);
            final int il=saved[i];
            sl[i].addMouseListener(new MouseAdapter()
            {
                
                public void mouseClicked(MouseEvent evt)
                {
                    savedClicked(il);
                }
            });
        }
        savedP.revalidate();
        savedP.repaint();
        
        //solvedP
        if(solved.length<9)
            gl=new GridLayout(9,1);
        else
            gl=new GridLayout(solved.length,1);
        solvedP.setLayout(gl);
        ql=new JLabel[solved.length];
        for(int i=0;i<solved.length;i++)
        {
            
            ql[i]=new JLabel("Puzzle "+solved[i]);
            ql[i].setPreferredSize(new Dimension(unsolvedP.getWidth(),60));
            ql[i].setOpaque(true);
            if(i%2==0)
                ql[i].setBackground(new Color(204,0,204));
            else
                ql[i].setBackground(new Color(204,0,153));
            ql[i].setHorizontalAlignment(SwingConstants.CENTER);
            ql[i].setForeground(Color.white);
            ql[i].setFont(new Font("comic sans ms",Font.PLAIN,22));
            solvedP.add(ql[i]);
            final int il=solved[i];
            ql[i].addMouseListener(new MouseAdapter()
            {
                
                public void mouseClicked(MouseEvent evt)
                {
                    solvedClicked(il);
                }
            });
        }
        solvedP.revalidate();
        solvedP.repaint();
       
    }
    
    public void unsolvedClicked(int i)
    {
        SolvePuzzleFrame spf=new SolvePuzzleFrame(i,'U');
        spf.setVisible(true);
        this.setVisible(false);
    }
    
    public void savedClicked(int i)
    {
        SolvePuzzleFrame spf=new SolvePuzzleFrame(i,'C');
        spf.setVisible(true);
        this.setVisible(false);
    }
    
    public void solvedClicked(int i)
    {
        SolvePuzzleFrame spf=new SolvePuzzleFrame(i,'S');
        spf.setVisible(true);
        this.setVisible(false);
    }
}
